<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goat.rbac.goatrbac.buzz.dao.QuestionMapper">

    <resultMap id="questionMap" type="com.goat.rbac.goatrbac.buzz.model.Question">
        <id column="QUESTION_ID" jdbcType="DECIMAL" property="questionId" />
        <result column="QUESTION_TYPE" jdbcType="INTEGER" property="questionType" />
        <result column="QUESTION_STATUS" jdbcType="INTEGER" property="questionStatus" />
        <result column="QUESTION_AUDIO" jdbcType="VARCHAR" property="questionAudio" />
        <result column="QUESTION_TEXT" jdbcType="VARCHAR" property="questionText" />
        <result column="QUESTION_SCORE" jdbcType="INTEGER" property="questionScore" />
        <result column="QUESTION_ANSWER" jdbcType="VARCHAR" property="questionAnswer" />
        <result column="QUESTION_DESC" jdbcType="VARCHAR" property="questionDesc" />
        <result column="QUESTION_OPTIONS" jdbcType="VARCHAR" property="questionOptions" />
        <result column="QUESTION_FORMAT" jdbcType="VARCHAR" property="questionFormat" />
        <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>


    <select id="find" resultMap="questionMap" parameterType="question">
        SELECT *  FROM b_question WHERE 1=1
<!--        <if test="deviceId !=null and deviceId != ''">-->
<!--            AND DEVICE_ID = #{deviceId}-->
<!--        </if>-->
<!--        <if test="deviceName !=null and deviceName != ''">-->
<!--            AND DEPT_NAME like concat('%', #{deviceName}, '%')-->
<!--        </if>-->
<!--        <if test="deviceCode !=null and deviceCode != ''">-->
<!--            AND DEVICE_CODE like concat('%', #{deviceCode}, '%')-->
<!--        </if>-->
    </select>


    <insert id="insert" parameterType="question" useGeneratedKeys="true" keyProperty="questionId">
        INSERT INTO b_question (
        <trim suffix="" suffixOverrides=",">
            <if test="questionType!=null and questionType!='' or questionType==0 ">QUESTION_TYPE, </if>
            <if test="questionStatus!=null and questionStatus!='' ">QUESTION_STATUS, </if>
            <if test="questionAudio!=null and questionAudio!='' ">QUESTION_AUDIO, </if>
            <if test="questionText!=null and questionText!='' ">QUESTION_TEXT, </if>
            <if test="questionScore!=null and questionScore!='' ">QUESTION_SCORE, </if>
            <if test="questionAnswer!=null and questionAnswer!='' ">QUESTION_ANSWER, </if>
            <if test="questionDesc!=null and questionDesc!='' ">QUESTION_DESC, </if>
            <if test="questionOptions!=null and questionOptions!='' ">QUESTION_OPTIONS, </if>
            <if test="modifyTime!=null  ">MODIFY_TIME, </if>
            <if test="createTime!=null  ">CREATE_TIME, </if>

        </trim>)
        VALUES (
        <trim suffix="" suffixOverrides=",">
            <if test="questionType!=null and questionType!='' or questionType==0 ">#{questionType}, </if>
            <if test="questionStatus!=null and questionStatus!='' ">#{questionStatus}, </if>
            <if test="questionAudio!=null and questionAudio!='' ">#{questionAudio}, </if>
            <if test="questionText!=null and questionText!='' ">#{questionText}, </if>
            <if test="questionScore!=null and questionScore!='' ">#{questionScore}, </if>
            <if test="questionAnswer!=null and questionAnswer!='' ">#{questionAnswer}, </if>
            <if test="questionDesc!=null and questionDesc!='' ">#{questionDesc}, </if>
            <if test="questionOptions!=null and questionOptions!='' ">#{questionOptions}, </if>
            <if test="modifyTime!=null ">#{modifyTime}, </if>
            <if test="createTime!=null ">#{createTime}, </if>
        </trim>)
    </insert>


    <delete id="deleteByIds" parameterType="Long">
        delete from b_question where QUESTION_ID in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>